// Задание 1
// • Используя Symbol.iterator, создайте объект "Музыкальная коллекция", который можно итерировать. Каждая итерация должна возвращать следующий альбом из коллекции.

// • Создайте объект musicCollection, который содержит массив альбомов и имеет свойство-символ Symbol.iterator. Каждый альбом имеет следующую структуру:

// {
//     title: "Название альбома",
//     artist: "Исполнитель",
//     year: "Год выпуска"
// }

// • Реализуйте кастомный итератор для объекта musicCollection. Итератор должен перебирать альбомы по порядку.
// • Используйте цикл for...of для перебора альбомов в музыкальной коллекции и вывода их на консоль в формате: Название альбома - Исполнитель (Год выпуска)

const albums = [
  {
    title: "Dark side of the moon",
    artist: "Pink floyd",
    year: 1973,
  },
  {
    title: "Black Album",
    artist: "Metallica",
    year: 1991,
  },
  {
    title: "Nevermind",
    artist: "Nirvana",
    year: 1991,
  },
];

albums[Symbol.iterator] = function () {
  return {
    current: 0,
    to: this.length,
    next() {
      return this.current < this.to
        ? { done: false, value: albums[this.current++] }
        : { done: true };
    },
  };
};
for (let album of albums) {
  console.log(
    `Название: ${album.title} ,Исполнитель:${album.artist}, год выпуска:${album.year}`
  );
}

// Задание 2
// Вы управляете рестораном, в котором работают разные повара, специализирующиеся на определенных блюдах. Клиенты приходят и делают заказы на разные блюда.

// Необходимо создать систему управления этими заказами, которая позволит:

// • Отслеживать, какой повар готовит какое блюдо.
// • Записывать, какие блюда заказал каждый клиент.

// Используйте коллекции Map для хранения блюд и их поваров, а также для хранения заказов каждого клиента. В качестве ключей для клиентов используйте объекты.

// Повара и их специализации:

// Виктор - специализация: Пицца.
// Ольга - специализация: Суши.
// Дмитрий - специализация: Десерты.

// Блюда и их повара:

// Пицца "Маргарита" - повар: Виктор.
// Пицца "Пепперони" - повар: Виктор.
// Суши "Филадельфия" - повар: Ольга.
// Суши "Калифорния" - повар: Ольга.
// Тирамису - повар: Дмитрий.
// Чизкейк - повар: Дмитрий.

// Заказы:

// Клиент Алексей заказал: Пиццу "Пепперони" и Тирамису.
// Клиент Мария заказала: Суши "Калифорния" и Пиццу "Маргарита".
// Клиент Ирина заказала: Чизкейк.

const chefsMap = new Map([
  ["Пицца 'Маргарита'", "Виктор"],
  ["Пицца 'Пепперони'", "Виктор"],
  ["Суши 'Филадельфия'", "Ольга"],
  ["Суши 'Калифорния'", "Ольга"],
  ["Тирамису", "Дмитрий"],
  ["Чизкейк", "Дмитрий"],
]);
const ordersMap = new Map();

const client1 = { name: "Алексей" };
const client2 = { name: "Мария" };
const client3 = { name: "Ирина" };

ordersMap.set(client1, ["Пицца 'Пепперони'", "Тирамису"]);
ordersMap.set(client2, ["Суши 'Калифорния'", "Пицца 'Маргарита'"]);
ordersMap.set(client3, ["Чизкейк"]);
console.log(ordersMap);

ordersMap.forEach((order, client) => {
  console.log(`Клиент ${client.name} заказал: ${order}`);
});
